using DurableTask.Core.Common;
using DurableTask.Core.Settings;
using System;
using System.Collections.Generic;
using System.Text;

namespace DurableTask.CosmosDb.Settings
{
    /// <summary>
    /// Various Task Hub worker settings
    /// </summary>
    /// <autogeneratedoc />
    public class ComsosDbOrchestrationServiceSettings
    {
        /// <summary>
        ///     Maximum number of times the task orchestration dispatcher will try to
        ///     process an orchestration message before giving up
        /// </summary>
        public int MaxTaskOrchestrationDeliveryCount { get; private set; }

        /// <summary>
        ///     Maximum number of times the task activity dispatcher will try to
        ///     process an orchestration message before giving up
        /// </summary>
        public int MaxTaskActivityDeliveryCount { get; private set; }
    
        /// <summary>
        ///     Maximum number of times the tracking dispatcher will try to
        ///     process an orchestration message before giving up
        /// </summary>
        public int MaxTrackingDeliveryCount { get; private set; }

        /// <summary>
        ///     Maximum queue size, in megabytes, for the service bus queues
        /// </summary>
        public long MaxQueueSizeInMegabytes { get; private set; } = 1024L;

        /// <summary>
        /// Gets the message prefetch count
        /// </summary>
        public int PrefetchCount { get; private set; } = 50;

        /// <summary>
        /// Gets the default interval in settings between retries
        /// </summary>
        public int IntervalBetweenRetriesSecs { get; private set; } = 5;

        /// <summary>
        /// Gets the max retries
        /// </summary>
        public int MaxRetries { get; private set; } = 5;

        /// <summary>
        ///     Settings to configure the Task Orchestration Dispatcher
        /// </summary>
        public TaskOrchestrationDispatcherSettings TaskOrchestrationDispatcherSettings { get; private set; }

        /// <summary>
        ///     Settings to configure the Task Activity Dispatcher
        /// </summary>
        public TaskActivityDispatcherSettings TaskActivityDispatcherSettings { get; private set; }

        /// <summary>
        ///     Settings to configure the Tracking Dispatcher
        /// </summary>
        public TrackingDispatcherSettings TrackingDispatcherSettings { get; private set; }

        /// <summary>
        ///     Enable compression of messages. Allows exchange of larger parameters and return values with activities at the cost
        ///     of additional CPU.
        ///     Default is false.
        /// </summary>
        public CompressionSettings MessageCompressionSettings { get; private set; }

        public ComsosDbOrchestrationServiceSettings
            (int maxTaskOrchestrationDeliveryCount,
            int maxTaskActivityDeliveryCount,
            int maxTaskTraxkingDeliveryCount
            )
        {
            this.MaxTaskOrchestrationDeliveryCount = MaxTaskOrchestrationDeliveryCount;
            this.MaxTaskActivityDeliveryCount = maxTaskActivityDeliveryCount;
            this.MaxTrackingDeliveryCount = MaxTrackingDeliveryCount;
            this.TaskOrchestrationDispatcherSettings = new TaskOrchestrationDispatcherSettings();
            this.TaskActivityDispatcherSettings = new TaskActivityDispatcherSettings();
            this.TrackingDispatcherSettings = new TrackingDispatcherSettings();
           
            this.MessageCompressionSettings = new CompressionSettings
            {
                Style = CompressionStyle.Never,
                ThresholdInBytes = 0
            };
        }

    }
}
